/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void enableFill_clicked1(GCheckbox source, GEvent event) { //_CODE_:enableFill:479199:
  filledWireFrame = (source.isSelected()) ? true : false;
} //_CODE_:enableFill:479199:

public void redSlider_change1(GSlider source, GEvent event) { //_CODE_:redSlider:792722:
  if(event == GEvent.RELEASED) {
    R = source.getValueI();
  }
  
} //_CODE_:redSlider:792722:

public void greenSlider_change1(GSlider source, GEvent event) { //_CODE_:greenSlider:837604:
  if(event == GEvent.RELEASED) {
    G = source.getValueI();
  }
} //_CODE_:greenSlider:837604:

public void blueSlider_change1(GSlider source, GEvent event) { //_CODE_:blueSlider:274861:
  if(event == GEvent.RELEASED) {
    B = source.getValueI();
  }
} //_CODE_:blueSlider:274861:

public void scaleInputBox_change1(GTextField source, GEvent event) { //_CODE_:scaleInputBox:758320:
  if(tryParseInt(source.getText())) {
    scl = Integer.parseInt(source.getText());
  }
} //_CODE_:scaleInputBox:758320:

public void updateButton_click1(GButton source, GEvent event) { //_CODE_:updateButton:332842:
  startStop = !startStop;
} //_CODE_:updateButton:332842:

public boolean tryParseInt(String value) {
  try {
    Integer.parseInt(value);
    return true;
  }
  catch(Exception ex) {
    return false;
  }
}


// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  label1 = new GLabel(this, 30, 0, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Scale:");
  label1.setLocalColorScheme(GCScheme.SCHEME_8);
  label1.setOpaque(false);
  enableFill = new GCheckbox(this, 10, 70, 120, 20);
  enableFill.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  enableFill.setText("Enable Fill");
  enableFill.setLocalColorScheme(GCScheme.SCHEME_8);
  enableFill.setOpaque(false);
  enableFill.addEventHandler(this, "enableFill_clicked1");
  enableFill.setSelected(true);
  redSlider = new GSlider(this, 140, 10, 100, 40, 10.0);
  redSlider.setLimits(0, 0, 255);
  redSlider.setNbrTicks(255);
  redSlider.setStickToTicks(true);
  redSlider.setNumberFormat(G4P.INTEGER, 0);
  redSlider.setOpaque(false);
  redSlider.addEventHandler(this, "redSlider_change1");
  greenSlider = new GSlider(this, 250, 10, 100, 40, 10.0);
  greenSlider.setLimits(0, 0, 255);
  greenSlider.setNbrTicks(255);
  greenSlider.setStickToTicks(true);
  greenSlider.setNumberFormat(G4P.INTEGER, 0);
  greenSlider.setOpaque(false);
  greenSlider.addEventHandler(this, "greenSlider_change1");
  blueSlider = new GSlider(this, 360, 10, 100, 40, 10.0);
  blueSlider.setLimits(0, 0, 255);
  blueSlider.setNbrTicks(255);
  blueSlider.setStickToTicks(true);
  blueSlider.setNumberFormat(G4P.INTEGER, 0);
  blueSlider.setOpaque(false);
  blueSlider.addEventHandler(this, "blueSlider_change1");
  scaleInputBox = new GTextField(this, 10, 30, 120, 30, G4P.SCROLLBARS_NONE);
  scaleInputBox.setText("20");
  scaleInputBox.setOpaque(true);
  scaleInputBox.addEventHandler(this, "scaleInputBox_change1");
  updateButton = new GButton(this, 490, 10, 80, 30);
  updateButton.setText("Submit");
  updateButton.addEventHandler(this, "updateButton_click1");
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GCheckbox enableFill; 
GSlider redSlider; 
GSlider greenSlider; 
GSlider blueSlider; 
GTextField scaleInputBox; 
GButton updateButton; 
